//Generated by the protocol buffer compiler. DO NOT EDIT!
// source: auth/v1alpha1/auth.proto

package com.example.trainstationapp.data.grpc.auth.v1alpha1;

@kotlin.jvm.JvmName("-initializegetJWTRequest")
inline fun getJWTRequest(block: com.example.trainstationapp.data.grpc.auth.v1alpha1.GetJWTRequestKt.Dsl.() -> kotlin.Unit): com.example.trainstationapp.data.grpc.auth.v1alpha1.AuthProto.GetJWTRequest =
  com.example.trainstationapp.data.grpc.auth.v1alpha1.GetJWTRequestKt.Dsl._create(com.example.trainstationapp.data.grpc.auth.v1alpha1.AuthProto.GetJWTRequest.newBuilder()).apply { block() }._build()
object GetJWTRequestKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  class Dsl private constructor(
    private val _builder: com.example.trainstationapp.data.grpc.auth.v1alpha1.AuthProto.GetJWTRequest.Builder
  ) {
    companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: com.example.trainstationapp.data.grpc.auth.v1alpha1.AuthProto.GetJWTRequest.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): com.example.trainstationapp.data.grpc.auth.v1alpha1.AuthProto.GetJWTRequest = _builder.build()

    /**
     * <code>.auth.v1alpha1.Account account = 1 [json_name = "account"];</code>
     */
    var account: com.example.trainstationapp.data.grpc.auth.v1alpha1.AuthProto.Account
      @JvmName("getAccount")
      get() = _builder.getAccount()
      @JvmName("setAccount")
      set(value) {
        _builder.setAccount(value)
      }
    /**
     * <code>.auth.v1alpha1.Account account = 1 [json_name = "account"];</code>
     */
    fun clearAccount() {
      _builder.clearAccount()
    }
    /**
     * <code>.auth.v1alpha1.Account account = 1 [json_name = "account"];</code>
     * @return Whether the account field is set.
     */
    fun hasAccount(): kotlin.Boolean {
      return _builder.hasAccount()
    }
  }
}
inline fun com.example.trainstationapp.data.grpc.auth.v1alpha1.AuthProto.GetJWTRequest.copy(block: com.example.trainstationapp.data.grpc.auth.v1alpha1.GetJWTRequestKt.Dsl.() -> kotlin.Unit): com.example.trainstationapp.data.grpc.auth.v1alpha1.AuthProto.GetJWTRequest =
  com.example.trainstationapp.data.grpc.auth.v1alpha1.GetJWTRequestKt.Dsl._create(this.toBuilder()).apply { block() }._build()

val com.example.trainstationapp.data.grpc.auth.v1alpha1.AuthProto.GetJWTRequestOrBuilder.accountOrNull: com.example.trainstationapp.data.grpc.auth.v1alpha1.AuthProto.Account?
  get() = if (hasAccount()) getAccount() else null

