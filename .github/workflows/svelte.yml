name: Svelte CI

on: push

jobs:
  build-svelte-amd64:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: train-station-front
          file: ./train-station-front/Dockerfile
          platforms: linux/amd64
          outputs: type=docker,dest=/tmp/image-amd64.tar
          tags: ghcr.io/darkness4/train-station-front:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: image-amd64
          path: /tmp/image-amd64.tar

  build-svelte-arm64:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: train-station-front
          file: ./train-station-front/Dockerfile.arm64
          platforms: linux/arm64
          outputs: type=docker,dest=/tmp/image-arm64.tar
          tags: ghcr.io/darkness4/train-station-front:arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: image-arm64
          path: /tmp/image-arm64.tar

  deploy-svelte:
    needs:
      - build-svelte-amd64
      - build-svelte-arm64
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: image-amd64

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: image-arm64

      - name: Load image
        run: |
          docker load --input image-arm64.tar
          docker load --input image-amd64.tar
          docker image ls -a

      - name: Login to GitHub Packages Docker Registry
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io --username $GITHUB_ACTOR --password-stdin

      - name: Deploy
        run: |
          if echo "$GITHUB_REF" | grep -q 'refs/tags/'; then
            docker tag ghcr.io/darkness4/train-station-front:latest "ghcr.io/darkness4/train-station-front:${GITHUB_REF#refs/*/}"
            docker tag ghcr.io/darkness4/train-station-front:latest "ghcr.io/darkness4/train-station-front:${GITHUB_REF#refs/*/}-amd64"
            docker tag ghcr.io/darkness4/train-station-front:arm64 "ghcr.io/darkness4/train-station-front:${GITHUB_REF#refs/*/}-arm64"
          fi
          docker tag ghcr.io/darkness4/train-station-front:latest "ghcr.io/darkness4/train-station-front:amd64"
          docker push ghcr.io/darkness4/train-station-front --all-tags
