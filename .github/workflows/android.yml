name: Android CI

on:
  push:
    paths:
      - .github/workflows/android.yaml
      - train-station-app/**
    tags:
      - '*'
    branches:
      - '*'
  pull_request:
    paths:
      - .github/workflows/android.yaml
      - train-station-app/**

defaults:
  run:
    working-directory: train-station-app

jobs:
  build-android:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
      # Release
      - name: Import keystore
        if: startsWith(github.ref, 'refs/tags/')
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
          DECRYPT_SHARED_KEY: ${{ secrets.DECRYPT_SHARED_KEY }}
        run: |
          echo "$KEYSTORE_BASE64" > app/keystore.jks.asc
          gpg -d --passphrase "$DECRYPT_SHARED_KEY" --batch app/keystore.jks.asc >> app/keystore.jks
          echo "$KEY_PROPERTIES" > key.properties.asc
          gpg -d --passphrase "$DECRYPT_SHARED_KEY" --batch key.properties.asc >> key.properties
      - name: Build Release with Gradle
        if: "startsWith(github.ref, 'refs/tags/')"
        run: |
          chmod +x gradlew
          ./gradlew buildRelease

      # Staging
      - name: Build Staging with Gradle
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: |
          chmod +x gradlew
          ./gradlew buildStaging

  test-android:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Test with Gradle
        run: |
          chmod +x gradlew
          ./gradlew test

  check-android:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
      - name: Check with Gradle
        run: |
          chmod +x gradlew
          ./gradlew app:check

  package-apk-android:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
      # Release
      - name: Import keystore
        if: startsWith(github.ref, 'refs/tags/')
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
          DECRYPT_SHARED_KEY: ${{ secrets.DECRYPT_SHARED_KEY }}
        run: |
          echo "$KEYSTORE_BASE64" > app/keystore.jks.asc
          gpg -d --passphrase "$DECRYPT_SHARED_KEY" --batch app/keystore.jks.asc >> app/keystore.jks
          echo "$KEY_PROPERTIES" > key.properties.asc
          gpg -d --passphrase "$DECRYPT_SHARED_KEY" --batch key.properties.asc >> key.properties
      - name: Package Release with Gradle
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          chmod +x gradlew
          ./gradlew assembleRelease
      - name: Upload Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v3
        with:
          name: app-apk
          path: train-station-app/app/build/outputs/apk/release/app-release.apk

      # Staging
      - name: Package Staging with Gradle
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: |
          chmod +x gradlew
          ./gradlew assembleStaging
      - name: Upload Staging
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: actions/upload-artifact@v3
        with:
          name: app-apk
          path: train-station-app/app/build/outputs/apk/staging/app-staging-unsigned.apk

  package-aab-android:
    runs-on: self-hosted

    steps:
      - uses: actions/checkout@v3
      - name: set up JDK 11
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'
      # Release
      - name: Import keystore
        if: startsWith(github.ref, 'refs/tags/')
        env:
          KEYSTORE_BASE64: ${{ secrets.KEYSTORE_BASE64 }}
          KEY_PROPERTIES: ${{ secrets.KEY_PROPERTIES }}
          DECRYPT_SHARED_KEY: ${{ secrets.DECRYPT_SHARED_KEY }}
        run: |
          echo "$KEYSTORE_BASE64" > app/keystore.jks.asc
          gpg -d --passphrase "$DECRYPT_SHARED_KEY" --batch app/keystore.jks.asc >> app/keystore.jks
          echo "$KEY_PROPERTIES" > key.properties.asc
          gpg -d --passphrase "$DECRYPT_SHARED_KEY" --batch key.properties.asc >> key.properties
      - name: Bundle Release with Gradle
        if: startsWith(github.ref, 'refs/tags/')
        run: |
          chmod +x gradlew
          ./gradlew app:bundleRelease
      - name: Upload Release
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-artifact@v3
        with:
          name: app-aab
          path: train-station-app/app/build/outputs/bundle/release/app-release.aab

      # Staging
      - name: Bundle Staging with Gradle
        if: "!startsWith(github.ref, 'refs/tags/')"
        run: |
          chmod +x gradlew
          ./gradlew app:bundleStaging
      - name: Upload Staging
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: actions/upload-artifact@v3
        with:
          name: app-aab
          path: train-station-app/app/build/outputs/bundle/staging/app-staging.aab

  deploy-android:
    needs:
      - test-android
      - build-android
      - package-apk-android
      - package-aab-android
    runs-on: self-hosted
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: app-apk
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: app-aab
      - name: Build Changelog
        id: github_release
        uses: heinrichreimer/github-changelog-generator-action@v2.3
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          onlyLastTag: 'true'
          issues: true
          issuesWoLabels: true
          pullRequests: true
          prWoLabels: true
          filterByMilestone: true
          author: true
          unreleased: true
          compareLink: true
          httpCache: true
          verbose: true
      - name: Echo changelog
        env:
          CHANGELOG: ${{ steps.github_release.outputs.changelog }}
        run: echo "$CHANGELOG"
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            app-release.apk
            app-release.aab
          body: ${{ steps.github_release.outputs.changelog }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
