name: Go CI

on: push

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v3
        with:
          version: latest
          working-directory: ./train-station-api-go
          args: --timeout 5m

  test-amd64-go:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-go@v3
        with:
          go-version: '1.16'
      - name: Get dependencies
        working-directory: ./train-station-api-go
        run: go get -d -v
      - name: Run tests
        working-directory: ./train-station-api-go
        run: go test -race -covermode=atomic -timeout=30s ./...

  build-amd64-go:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and export
        uses: docker/build-push-action@v3
        with:
          context: train-station-api-go
          file: ./train-station-api-go/Dockerfile
          platforms: linux/amd64
          tags: darkness4/train-station-api:latest
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Validate
        run: docker run --pull never --rm darkness4/train-station-api:latest --help

      - name: Build
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: docker/build-push-action@v3
        with:
          context: train-station-api-go
          file: ./train-station-api-go/Dockerfile
          platforms: linux/amd64
          push: false
          tags: ghcr.io/darkness4/train-station-api:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Login to GHCR
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the oci compatible version
        if: startsWith(github.ref, 'refs/tags/')
        id: get_version
        run: |
          OCI_VERSION=$(echo ${GITHUB_REF#refs/*/} | sed 's/+/-/g')
          echo ::set-output name=VERSION::${OCI_VERSION}

      - name: Build and export
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v3
        with:
          context: train-station-api-go
          file: ./train-station-api-go/Dockerfile
          platforms: linux/amd64
          push: true
          tags: |
            ghcr.io/darkness4/train-station-api:latest
            ghcr.io/darkness4/train-station-api:${{ steps.get_version.outputs.VERSION }}
            ghcr.io/darkness4/train-station-api:amd64
            ghcr.io/darkness4/train-station-api:${{ steps.get_version.outputs.VERSION }}-amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

  build-arm64-go:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and export
        uses: docker/build-push-action@v3
        with:
          context: train-station-api-go
          file: ./train-station-api-go/Dockerfile
          platforms: linux/arm64
          tags: darkness4/train-station-api:arm64
          load: true
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Validate
        run: docker run --pull never --rm darkness4/train-station-api:arm64 --help

      - name: Build
        if: "!startsWith(github.ref, 'refs/tags/')"
        uses: docker/build-push-action@v3
        with:
          context: train-station-api-go
          file: ./train-station-api-go/Dockerfile.arm64
          platforms: linux/arm64
          push: false
          tags: ghcr.io/darkness4/train-station-api:arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Login to GHCR
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get the oci compatible version
        if: startsWith(github.ref, 'refs/tags/')
        id: get_version
        run: |
          OCI_VERSION=$(echo ${GITHUB_REF#refs/*/} | sed 's/+/-/g')
          echo ::set-output name=VERSION::${OCI_VERSION}

      - name: Build and export
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/build-push-action@v3
        with:
          context: train-station-api-go
          file: ./train-station-api-go/Dockerfile.arm64
          platforms: linux/arm64
          push: true
          tags: |
            ghcr.io/darkness4/train-station-api:arm64
            ghcr.io/darkness4/train-station-api:${{ steps.get_version.outputs.VERSION }}-arm64
          cache-from: type=gha
          cache-to: type=gha,mode=max
