name: Go CI

on: push

jobs:
  test-amd64-go:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '1.16'
      - name: Run tests
        run: go test -short ./...

  build-amd64-go:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: train-station-api-go
          file: ./train-station-api-go/Dockerfile
          platforms: linux/amd64
          outputs: type=docker,dest=/tmp/image-amd64.tar
          tags: ghcr.io/darkness4/train-station-api:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: image-amd64
          path: /tmp/image-amd64.tar

  build-arm64-go:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and export
        uses: docker/build-push-action@v2
        with:
          context: train-station-api-go
          file: ./train-station-api-go/Dockerfile
          platforms: linux/arm64
          outputs: type=docker,dest=/tmp/image-arm64.tar
          tags: ghcr.io/darkness4/train-station-api:arm64

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: image-arm64
          path: /tmp/image-arm64.tar

  deploy-go:
    needs:
      - test-amd64-go
      - build-arm64-go
      - build-amd64-go
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: image-amd64

      - name: Download artifact
        uses: actions/download-artifact@v2
        with:
          name: image-arm64

      - name: Load image
        run: |
          docker load --input image-arm64.tar
          docker load --input image-amd64.tar
          docker image ls -a

      - name: Login to GitHub Packages Docker Registry
        run: |
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io --username $GITHUB_ACTOR --password-stdin

      - name: Deploy
        run: |
          docker push ghcr.io/darkness4/train-station-api:latest
          docker push ghcr.io/darkness4/train-station-api:arm64
