openapi: 3.0.3
info:
  title: Train Station API
  description: This is a sample server Train Station API.
  contact:
    email: nguyen_marc@live.fr
  license:
    name: MIT
    url: 'https://github.com/Darkness4/train-station/blob/main/LICENSE'
  version: 1.0.0
servers:
  - url: 'https://train.the-end-is-never-the-end.pw/'
tags:
  - name: station
    description: Operations about train stations
  - name: other
    description: Other type of operations
paths:
  /api/station/:
    get:
      tags:
        - station
      summary: Finds train stations
      operationId: getManyStation
      parameters:
        - name: s
          in: query
          description: A search query.
          required: false
          content:
            application/json:
              schema:
                type: object
                properties:
                  libelle:
                    type: object
                    properties:
                      $cont:
                        type: string
                    example:
                      $cont: Gardanne
        - name: limit
          in: query
          description: The number of items to return.
          required: false
          schema:
            type: integer
            default: 10
            example: 10
        - name: page
          in: query
          description: The page to query.
          required: false
          schema:
            type: integer
            default: 1
            example: 1
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStation'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    post:
      tags:
        - station
      summary: Add a new train station
      operationId: createOneStation
      requestBody:
        description: Station object that needs to be added
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Station'
        required: true
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Station'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Station not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  '/api/station/{id}':
    patch:
      tags:
        - station
      summary: Update an existing train station
      operationId: updateOneStation
      parameters:
        - name: id
          in: path
          description: ID of station to edit
          required: true
          schema:
            type: string
      requestBody:
        description: Station object that needs to be edited
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Station'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Station'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Station not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '405':
          description: Validation exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
    get:
      tags:
        - station
      summary: Find one station by ID
      description: Returns a single train station
      operationId: getOneStation
      parameters:
        - name: id
          in: path
          description: ID of station to return
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Station'
        '400':
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Authentication exception
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Station not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
      security:
        - bearerAuth: []
  /:
    get:
      tags:
        - other
      summary: Root
      description: Root
      operationId: getRoot
      responses:
        '302':
          description: Redirect to API
          headers:
            Location:
              description: URI to the API
              schema:
                type: string
  /healthz:
    get:
      tags:
        - other
      summary: Returns health of the server
      operationId: getHealthz
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
  /openapi:
    get:
      tags:
        - other
      summary: Get Open API specification
      operationId: getOpenApi
      responses:
        '200':
          description: Successful operation
components:
  schemas:
    Geometry:
      type: object
      properties:
        type:
          type: string
          example: Point
        coordinates:
          type: array
          items:
            type: number
            format: double
          example:
            - 1.871552843730545
            - 48.89367063584661
    Fields:
      type: object
      properties:
        commune:
          type: string
          example: MAREIL-SUR-MAULDRE
        y_wgs84:
          type: number
          format: double
          example: 48.8936706358685
        x_wgs84:
          type: number
          format: double
          example: 1.871552843730546
        libelle:
          type: string
          example: Mareil-sur-Mauldre
        idgaia:
          type: string
          example: e1b2762a-19bf-11e5-a6ff-01fc64e0362d
        voyageurs:
          type: string
          example: '0'
        geo_point_2d:
          type: array
          items:
            type: number
            format: double
          example:
            - 48.8936706358
            - 1.87155284373
        code_ligne:
          type: string
          example: '396000'
        x_l93:
          type: number
          format: double
          example: 617263.3342999965
        c_geo:
          type: array
          items:
            type: number
            format: double
          example:
            - 48.8936706358685
            - 1.8715528437305458
        rg_troncon:
          type: integer
          format: int64
          example: 1
        geo_shape:
          $ref: '#/components/schemas/Geometry'
        pk:
          type: string
          example: 042+382
        idreseau:
          type: integer
          format: int64
          example: 5359
        departemen:
          type: string
          example: YVELINES
        y_l93:
          type: number
          format: double
          example: 6866553.629700001
        fret:
          type: string
          example: 'N'
    Station:
      type: object
      properties:
        recordid:
          type: string
          example: d74d6522316a0f2e6f9e2c09165fd74a2e86718d
        datasetid:
          type: string
          example: liste-des-gares
        is_favorite:
          type: boolean
          example: false
        libelle:
          type: string
          example: Mareil-sur-Mauldre
        record_timestamp:
          type: string
          example: '2021-06-22T15:21:14.582Z'
        fields:
          $ref: '#/components/schemas/Fields'
        geometry:
          $ref: '#/components/schemas/Geometry'
    PaginatedStation:
      type: object
      required:
        - data
        - count
        - total
        - page
        - pageCount
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Station'
        count:
          type: integer
          format: int64
          example: 10
        total:
          type: integer
          format: int64
          example: 60
        page:
          type: integer
          example: 1
        pageCount:
          type: integer
          format: int64
          example: 6
    Error:
      type: object
      required:
        - statusCode
        - message
      properties:
        statusCode:
          type: integer
          example: 200
        message:
          type: string
          example: Success
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
